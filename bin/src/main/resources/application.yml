server.port : 5000

spring.jpa.hibernate.ddl-auto : none
spring.datasource.url : jdbc:mysql://plataforma.cflyqudqcoq8.us-east-2.rds.amazonaws.com:3306/tributo?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username : tributo
spring.datasource.password : Tributo2019*GTS


spring:
    datasource:
        url: jdbc:mysql://plataforma.cflyqudqcoq8.us-east-2.rds.amazonaws.com:3306/tributo?useSSL=false
        username: tributo
        password: Tributo2019*GTS

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 562395250791-a3k2v884gmudn0tvug80dqq738kqem22.apps.googleusercontent.com
              clientSecret: rnjZd-kQm5H8oNEkedTzMAEK
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile

app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:4200/
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect

